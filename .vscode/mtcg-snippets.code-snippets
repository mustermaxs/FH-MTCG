{
	// Place your snippets for csharp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	{
		"Print to console": {
			"prefix": "conw",
			"body": [
				"Console.WriteLine($1);"
			],
			"description": "Log output to console (WriteLine)"
		},
		"Lang comment style": {
			"prefix": "lang",
			"body": [
				"////////////////////////////////////////////////////////////////////////////",
				"// $1                                                                  	//",
				"////////////////////////////////////////////////////////////////////////////"
			]
		},
		"Lang comment style (Single Line)": {
			"prefix": "cline",
			"body": [
				"////////////////////////////////////////////////////////////////////////////"
			]
		},
		"Add summary comment": {
			"prefix": "csumm",
			"body": [
				"/// <summary>",
				"/// $1",
				"/// </summary>",
				"$2"
			],
			"description": "Add summary comment to code."
		},
		"Add params comment": {
			"prefix": "cparam",
			"body": [
				"/// <param name=\"$1\">",
				"/// $2",
				"/// </param>",
				"$3"
			],
			"description": "Add param comment to explain signature."
		},
		"Add return value comment": {
			"prefix": "cret",
			"body": [
				"/// <returns>",
				"/// $1",
				"/// </returns>",
				"$2"
			],
			"description": "Add return value comment to code."
		},
		"Add comment with timestamp": {
			"prefix": "tcom",
			"body": [
				"/// $CURRENT_DATE.$CURRENT_MONTH.$CURRENT_YEAR $CURRENT_HOUR:$CURRENT_MINUTE",
				"/// $1"
			],
			"description": "Add comment with timestamp."
		},
		"Add get string get ordinak": {
			"prefix": "sqlget",
			"body": [
				"$1.$2 = re.GetString(re.GetOrdinal(\"$2\"));"
			],
			"description": "Add get string get ordinal statement."
		},
		"npsql add with value": {
			"prefix": "sqladdparam",
			"body": [
				"command.Parameters.AddWithValue(\"@$1\", user.$1);"
			],
			"description": "Add Npgsql parameter with value."
		}
	},
	"Add deco line": {
		"prefix": "decoline",
		"body": [
			"//////////////////////////////////////////////////////////////////////",
			"//////////////////////////////////////////////////////////////////////"
		],
		"description": "Inserts a decorative line"
	}
}


